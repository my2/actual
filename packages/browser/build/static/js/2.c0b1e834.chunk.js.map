{"version":3,"sources":["../../../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../../../node_modules/@juggle/resize-observer/lib/utils/freeze.js","../../../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","../../../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../../../node_modules/@juggle/resize-observer/lib/utils/element.js","../../../node_modules/@juggle/resize-observer/lib/utils/global.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../../../node_modules/@juggle/resize-observer/lib/utils/process.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../../../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../../../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../../../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../../../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../../../node_modules/@juggle/resize-observer/lib/exports/resize-observer.js"],"names":["ResizeObserverBoxOptions","resizeObservers","msg","trigger","freeze","obj","Object","ResizeObserverSize_ResizeObserverSize","inlineSize","blockSize","this","DOMRectReadOnly_DOMRectReadOnly","DOMRectReadOnly","x","y","width","height","top","left","bottom","right","prototype","toJSON","_a","fromRect","rectangle","isSVG","target","SVGElement","isHidden","getBBox","_b","offsetWidth","offsetHeight","getClientRects","length","isElement","Element","scope","ownerDocument","defaultView","global","window","cache","WeakMap","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","calculateBoxSize_size","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","forceRecalculation","has","get","set","cs","getComputedStyle","svg","ownerSVGElement","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","Math","round","devicePixelRatio","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry_ResizeObserverEntry","calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations","shallowestDepth","callbacks","forEach","ro","activeTargets","entries","ot","entry","targetDepth","push","lastReportedSize","callback","call","observer","splice","_i","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","process","some","event","ErrorEvent","message","document","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","queueMicroTask_callbacks","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","cb","observe","characterData","textContent","watching","observerConfig","attributes","childList","subtree","events","time","timeout","Date","now","scheduled","scheduler","Scheduler","_this","stopped","listener","schedule","run","until","elementsHaveResized","start","requestAnimationFrame","stop","body","addEventListener","name","disconnect","removeEventListener","updateCount","n","ResizeObservation_ResizeObservation","ResizeObservation","CONTENT_BOX","size","tagName","type","isReplacedElement","display","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","i","ResizeObserverController_ResizeObserverController","ResizeObserverController","connect","detail","options","firstObservation","box","unobserve","index","lastObservation","indexOf","slice","ResizeObserver_ResizeObserver","ResizeObserver","arguments","TypeError","toString","__webpack_require__","d","__webpack_exports__"],"mappings":"iGAAA,ICAAA,EDAAC,EAAA,GEAAC,EAAA,iEDEA,SAAAF,GACAA,EAAA,wBACAA,EAAA,0BACAA,EAAA,oDAHA,CAICA,MAAA,KENM,ICAPG,EDAOC,EAAA,SAAAC,GACP,OAAAC,OAAAF,OAAAC,IECIE,EAAkB,WAOtB,OANA,SAAAC,EAAAC,GACAC,KAAAF,aACAE,KAAAD,YACIL,EAAMM,OAJY,GCAlBC,EAAe,WACnB,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GASA,OARAN,KAAAG,IACAH,KAAAI,IACAJ,KAAAK,QACAL,KAAAM,SACAN,KAAAO,IAAAP,KAAAI,EACAJ,KAAAQ,KAAAR,KAAAG,EACAH,KAAAS,OAAAT,KAAAO,IAAAP,KAAAM,OACAN,KAAAU,MAAAV,KAAAQ,KAAAR,KAAAK,MACWX,EAAMM,MA8BjB,OA3BAE,EAAAS,UAAAC,OAAA,WACA,IAAAC,EAAAb,KAUA,OACAG,EAVAU,EAAAV,EAWAC,EAVAS,EAAAT,EAWAG,IAVAM,EAAAN,IAWAG,MAVAG,EAAAH,MAWAD,OAVAI,EAAAJ,OAWAD,KAVAK,EAAAL,KAWAH,MAVAQ,EAAAR,MAWAC,OAVAO,EAAAP,SAcAJ,EAAAY,SAAA,SAAAC,GACA,WAAAb,EAAAa,EAAAZ,EAAAY,EAAAX,EAAAW,EAAAV,MAAAU,EAAAT,SAGAJ,EAxCmB,GCFnBc,EAAA,SAAAC,GACA,OAAAA,aAAAC,YAAA,YAAAD,GAGAE,EAAA,SAAAF,GACA,GAAAD,EAAAC,GAAA,CACA,IAAAJ,EAAAI,EAAAG,UACAf,EAAAQ,EAAAR,MACAC,EAAAO,EAAAP,OAEA,OAAAD,IAAAC,EAGA,IAAAe,EAAAJ,EACAK,EAAAD,EAAAC,YACAC,EAAAF,EAAAE,aACA,QAAAD,GAAAC,GAAAN,EAAAO,iBAAAC,SAGAC,EAAA,SAAA/B,GACA,IAAAkB,EAAAQ,EAEA,GAAA1B,aAAAgC,QACA,SAGA,IAAAC,EAAA,QAAAP,EAAA,QAAAR,EAAAlB,SAAA,IAAAkB,OAAA,EAAAA,EAAAgB,qBAAA,IAAAR,OAAA,EAAAA,EAAAS,YACA,SAAAF,GAAAjC,aAAAiC,EAAAD,UC3BOI,EAAA,qBAAAC,cAAA,GCMPC,EAAA,IAAAC,QACAC,EAAA,cACAC,EAAA,eACAC,EAAA,gBAAAC,KAA8BP,EAAMQ,WAAcR,EAAMQ,UAAAC,WAExDC,EAAA,SAAAC,GACA,OAAAC,WAAAD,GAAA,MAGIE,EAAI,SAAA9C,EAAAC,EAAA8C,GAaR,YAZA,IAAA/C,IACAA,EAAA,QAGA,IAAAC,IACAA,EAAA,QAGA,IAAA8C,IACAA,GAAA,GAGA,IAAahD,GAAkBgD,EAAA9C,EAAAD,IAAA,GAAA+C,EAAA/C,EAAAC,IAAA,IAG/B+C,EAAgBpD,EAAM,CACtBqD,0BAA6BH,IAC7BI,cAAiBJ,IACjBK,eAAkBL,IAClBM,YAAA,IAAmBjD,EAAe,WAGlCkD,EAAA,SAAAlC,EAAAmC,GAKA,QAJA,IAAAA,IACAA,GAAA,GAGAnB,EAAAoB,IAAApC,KAAAmC,EACA,OAAAnB,EAAAqB,IAAArC,GAGA,GAAME,EAAQF,GAEd,OADAgB,EAAAsB,IAAAtC,EAAA6B,GACAA,EAGA,IAAAU,EAAAC,iBAAAxC,GACAyC,EAAY1C,EAAKC,MAAA0C,iBAAA1C,EAAAG,UACjBwC,GAAAvB,GAAA,eAAAmB,EAAAK,UACAhB,EAAAT,EAAAE,KAAAkB,EAAAM,aAAA,IACAC,GAAAL,GAAAvB,EAAAG,KAAAkB,EAAAQ,WAAA,IACAC,GAAAP,GAAAvB,EAAAG,KAAAkB,EAAAU,WAAA,IACAC,EAAAT,EAAA,EAAAjB,EAAAe,EAAAW,YACAC,EAAAV,EAAA,EAAAjB,EAAAe,EAAAY,cACAC,EAAAX,EAAA,EAAAjB,EAAAe,EAAAa,eACAC,EAAAZ,EAAA,EAAAjB,EAAAe,EAAAc,aACAC,EAAAb,EAAA,EAAAjB,EAAAe,EAAAgB,gBACAC,EAAAf,EAAA,EAAAjB,EAAAe,EAAAkB,kBACAC,EAAAjB,EAAA,EAAAjB,EAAAe,EAAAoB,mBAEAC,EAAAP,EAAAF,EACAU,EAAAX,EAAAE,EACAU,GAHArB,EAAA,EAAAjB,EAAAe,EAAAwB,kBAGAP,EACAQ,EAAAV,EAAAI,EACAO,EAAAjB,EAAAhD,EAAAM,aAAA0D,EAAAhE,EAAAkE,aAAA,EACAC,EAAArB,EAAA9C,EAAAK,YAAAyD,EAAA9D,EAAAoE,YAAA,EACAC,EAAA1B,EAAAiB,EAAAE,EAAA,EACAQ,EAAA3B,EAAAkB,EAAAG,EAAA,EACAO,EAAA9B,IAAArD,MAAAoC,EAAAe,EAAAnD,OAAAiF,EAAAF,EACAK,EAAA/B,IAAApD,OAAAmC,EAAAe,EAAAlD,QAAAiF,EAAAL,EACAQ,EAAAF,EAAAX,EAAAO,EAAAL,EACAY,EAAAF,EAAAX,EAAAI,EAAAD,EACAW,EAAclG,EAAM,CACpBqD,0BAA+BH,EAAIiD,KAAAC,MAAAN,EAAAO,kBAAAF,KAAAC,MAAAL,EAAAM,kBAAAlD,GACnCG,cAAmBJ,EAAI8C,EAAAC,EAAA9C,GACvBI,eAAoBL,EAAI4C,EAAAC,EAAA5C,GACxBK,YAAA,IAAqBjD,EAAeqE,EAAAH,EAAAqB,EAAAC,KAGpC,OADAxD,EAAAsB,IAAAtC,EAAA2E,GACAA,GAGAI,EAAA,SAAA/E,EAAAgF,EAAA7C,GACA,IAAAvC,EAAAsC,EAAAlC,EAAAmC,GACAJ,EAAAnC,EAAAmC,cACAC,EAAApC,EAAAoC,eACAF,EAAAlC,EAAAkC,0BAEA,OAAAkD,GACA,KAAS3G,EAAwB4G,yBACjC,OAAAnD,EAEA,KAASzD,EAAwB6G,WACjC,OAAAnD,EAEA,QACA,OAAAC,ICnGImD,EAAmB,WAUvB,OATA,SAAAnF,GACA,IAAA2E,EAAgBzC,EAAiBlC,GACjCjB,KAAAiB,SACAjB,KAAAkD,YAAA0C,EAAA1C,YACAlD,KAAAgD,cAAyBtD,EAAM,CAAAkG,EAAA5C,gBAC/BhD,KAAAiD,eAA0BvD,EAAM,CAAAkG,EAAA3C,iBAChCjD,KAAA+C,0BAAqCrD,EAAM,CAAAkG,EAAA7C,6BAPpB,GCDvBsD,EAAA,SAAAC,GACA,GAAMnF,EAAQmF,GACd,OAAAC,IAMA,IAHA,IAAAC,EAAA,EACAC,EAAAH,EAAAI,WAEAD,GACAD,GAAA,EACAC,IAAAC,WAGA,OAAAF,GCVAG,EAAA,WACA,IAAAC,EAAAL,IACAM,EAAA,GACEtH,EAAeuH,QAAA,SAAAC,GACjB,OAAAA,EAAAC,cAAAvF,OAAA,CAIA,IAAAwF,EAAA,GACAF,EAAAC,cAAAF,QAAA,SAAAI,GACA,IAAAC,EAAA,IAAsBf,EAAmBc,EAAAjG,QACzCmG,EAAwBf,EAAqBa,EAAAjG,QAC7CgG,EAAAI,KAAAF,GACAD,EAAAI,iBAA4BtB,EAAgBkB,EAAAjG,OAAAiG,EAAAjB,aAE5CmB,EAAAR,IACAA,EAAAQ,KAGAP,EAAAQ,KAAA,WACAN,EAAAQ,SAAAC,KAAAT,EAAAU,SAAAR,EAAAF,EAAAU,YAEAV,EAAAC,cAAAU,OAAA,EAAAX,EAAAC,cAAAvF,WAGA,QAAAkG,EAAA,EAAAC,EAAAf,EAA2Cc,EAAAC,EAAAnG,OAAyBkG,IAAA,EAEpEJ,EADAK,EAAAD,MAIA,OAAAf,GChCAiB,EAAA,SAAArB,GACEjH,EAAeuH,QAAA,SAAAC,GACjBA,EAAAC,cAAAU,OAAA,EAAAX,EAAAC,cAAAvF,QACAsF,EAAAe,eAAAJ,OAAA,EAAAX,EAAAe,eAAArG,QACAsF,EAAAgB,mBAAAjB,QAAA,SAAAI,GACAA,EAAAc,aACY3B,EAAqBa,EAAAjG,QAAAuF,EACjCO,EAAAC,cAAAK,KAAAH,GAEAH,EAAAe,eAAAT,KAAAH,SCNAe,EAAA,WACA,IAAAzB,EAAA,EAGA,IAFEqB,EAA+BrB,GCLxBjH,EAAe2I,KAAA,SAAAnB,GACxB,OAAAA,EAAAC,cAAAvF,OAAA,KDOA+E,EAAYG,IACRkB,EAA+BrB,GAOnC,OEhBSjH,EAAe2I,KAAA,SAAAnB,GACxB,OAAAA,EAAAe,eAAArG,OAAA,KdFA,WACA,IAAA0G,EAEA,oBAAAC,WACAD,EAAA,IAAAC,WAAA,SACAC,QAAA7I,MAGA2I,EAAAG,SAAAC,YAAA,UACAC,UAAA,eACAL,EAAAE,QAAA7I,GAGAwC,OAAAyG,cAAAN,GYCIO,GAGJlC,EAAA,GVlBImC,EAAS,GAQbC,EAAA,SAAArB,GACA,IAAA9H,EAAA,CACA,IAAAoJ,EAAA,EACAC,EAAAR,SAAAS,eAAA,IAIA,IAAAC,iBAAA,WACA,OAbSL,EAASjB,OAAA,GAAAZ,QAAA,SAAAmC,GAClB,OAAAA,QAaKC,QAAAJ,EALL,CACAK,eAAA,IAMA1J,EAAA,WACAqJ,EAAAM,YAAA,IAAAP,YAIEF,EAAStB,KAAAE,GACX9H,KavBA4J,EAAA,EAOAC,EAAA,CACAC,YAAA,EACAJ,eAAA,EACAK,WAAA,EACAC,SAAA,GAEAC,EAAA,qKAEAC,EAAA,SAAAC,GAKA,YAJA,IAAAA,IACAA,EAAA,GAGAC,KAAAC,MAAAF,GAGAG,GAAA,EA6FAC,EAAA,IA3Fa,WACb,SAAAC,IACA,IAAAC,EAAAlK,KAEAA,KAAAmK,SAAA,EAEAnK,KAAAoK,SAAA,WACA,OAAAF,EAAAG,YAiFA,OA7EAJ,EAAAtJ,UAAA2J,IAAA,SAAAV,GACA,IAAAM,EAAAlK,KAMA,QAJA,IAAA4J,IACAA,EAlCA,MAqCAG,EAAA,CAIAA,GAAA,EACA,ICjDAd,EDiDAsB,EAAAZ,EAAAC,GCjDAX,EDkDuB,WACvB,IAAAuB,GAAA,EAEA,IACAA,EAA8BvC,IACvB,QAIP,GAHA8B,GAAA,EACAH,EAAAW,EAAAZ,KArDAN,EAwDA,OAGAmB,EACAN,EAAAI,IAAA,KACSV,EAAA,EACTM,EAAAI,IAAAV,GAEAM,EAAAO,UCnEE7B,EAAc,WAChB8B,sBAAAzB,ODwEAgB,EAAAtJ,UAAA0J,SAAA,WACArK,KAAA2K,OACA3K,KAAAsK,OAGAL,EAAAtJ,UAAAuI,QAAA,WACA,IAAAgB,EAAAlK,KAEAiJ,EAAA,WACA,OAAAiB,EAAAzC,UAAAyC,EAAAzC,SAAAyB,QAAAZ,SAAAsC,KAAAtB,IAGAhB,SAAAsC,KAAA3B,IAA2BlH,EAAM8I,iBAAA,mBAAA5B,IAGjCgB,EAAAtJ,UAAA8J,MAAA,WACA,IAAAP,EAAAlK,KAEAA,KAAAmK,UACAnK,KAAAmK,SAAA,EACAnK,KAAAyH,SAAA,IAAAuB,iBAAAhJ,KAAAoK,UACApK,KAAAkJ,UACAQ,EAAA5C,QAAA,SAAAgE,GACA,OAAe/I,EAAM8I,iBAAAC,EAAAZ,EAAAE,UAAA,OAKrBH,EAAAtJ,UAAAgK,KAAA,WACA,IAAAT,EAAAlK,KAEAA,KAAAmK,UACAnK,KAAAyH,UAAAzH,KAAAyH,SAAAsD,aACArB,EAAA5C,QAAA,SAAAgE,GACA,OAAe/I,EAAMiJ,oBAAAF,EAAAZ,EAAAE,UAAA,KAErBpK,KAAAmK,SAAA,IAIAF,EAxFa,IA6FbgB,EAAA,SAAAC,IACA7B,GAAA6B,EAAA,GAAAlB,EAAAS,UACApB,GAAA6B,IACAlB,EAAAW,QEpHIQ,EAAiB,WACrB,SAAAC,EAAAnK,EAAAgF,GACAjG,KAAAiB,SACAjB,KAAAiG,eAAsC3G,EAAwB+L,YAC9DrL,KAAAsH,iBAAA,CACAxH,WAAA,EACAC,UAAA,GAkBA,OAdAqL,EAAAzK,UAAAqH,SAAA,WACA,IAfA/G,EAeAqK,EAAetF,EAAgBhG,KAAAiB,OAAAjB,KAAAiG,aAAA,GAM/B,OArBAhF,EAiBAjB,KAAAiB,OAhBUD,EAAKC,IZyBf,SAAAA,GACA,OAAAA,EAAAsK,SACA,YACA,aAAAtK,EAAAuK,KACA,MAGA,YACA,YACA,YACA,aACA,aACA,aACA,UACA,SAGA,SY1C4BC,CAAiBxK,IAAA,WAAAwC,iBAAAxC,GAAAyK,UAiB7C1L,KAAAsH,iBAAAgE,GAGAtL,KAAAsH,iBAAAxH,aAAAwL,EAAAxL,YAAAE,KAAAsH,iBAAAvH,YAAAuL,EAAAvL,WAOAqL,EAxBqB,GCRrBO,EAAA,WASA,OARA,SAAAC,EAAArE,GACAvH,KAAAgH,cAAA,GACAhH,KAAA8H,eAAA,GACA9H,KAAA+H,mBAAA,GACA/H,KAAAyH,SAAAmE,EACA5L,KAAAuH,YANA,GCIAsE,EAAA,IAAA3J,QAEA4J,EAAA,SAAA/D,EAAA9G,GACA,QAAA8K,EAAA,EAAiBA,EAAAhE,EAAAtG,OAA+BsK,GAAA,EAChD,GAAAhE,EAAAgE,GAAA9K,WACA,OAAA8K,EAIA,UAGIC,EAAwB,WAC5B,SAAAC,KAyCA,OAvCAA,EAAAC,QAAA,SAAAN,EAAArE,GACA,IAAA4E,EAAA,IAAqBR,EAAoBC,EAAArE,GACzCsE,EAAAtI,IAAAqI,EAAAO,IAGAF,EAAA/C,QAAA,SAAA0C,EAAA3K,EAAAmL,GACA,IAAAD,EAAAN,EAAAvI,IAAAsI,GACAS,EAAA,IAAAF,EAAApE,mBAAAtG,OAEAqK,EAAAK,EAAApE,mBAAA9G,GAAA,IACAoL,GAA0B9M,EAAe8H,KAAA8E,GACzCA,EAAApE,mBAAAV,KAAA,IAAyC8D,EAAiBlK,EAAAmL,KAAAE,MACpDrB,EAAW,GACXjB,EAASK,aAIf4B,EAAAM,UAAA,SAAAX,EAAA3K,GACA,IAAAkL,EAAAN,EAAAvI,IAAAsI,GACAY,EAAAV,EAAAK,EAAApE,mBAAA9G,GACAwL,EAAA,IAAAN,EAAApE,mBAAAtG,OAEA+K,GAAA,IACAC,GAAyBlN,EAAemI,OAAQnI,EAAemN,QAAAP,GAAA,GAC/DA,EAAApE,mBAAAL,OAAA8E,EAAA,GACMvB,GAAW,KAIjBgB,EAAAlB,WAAA,SAAAa,GACA,IAAA1B,EAAAlK,KAEAmM,EAAAN,EAAAvI,IAAAsI,GACAO,EAAApE,mBAAA4E,QAAA7F,QAAA,SAAAI,GACA,OAAAgD,EAAAqC,UAAAX,EAAA1E,EAAAjG,UAEAkL,EAAAnF,cAAAU,OAAA,EAAAyE,EAAAnF,cAAAvF,SAGAwK,EA1C4B,GCbxBW,EAAc,WAClB,SAAAC,EAAAtF,GACA,OAAAuF,UAAArL,OACA,UAAAsL,UAAA,kFAGA,uBAAAxF,EACA,UAAAwF,UAAA,iGAGIf,EAAwBE,QAAAlM,KAAAuH,GAmC5B,OAhCAsF,EAAAlM,UAAAuI,QAAA,SAAAjI,EAAAmL,GACA,OAAAU,UAAArL,OACA,UAAAsL,UAAA,6FAGA,IAASrL,EAAST,GAClB,UAAA8L,UAAA,wFAGIf,EAAwB9C,QAAAlJ,KAAAiB,EAAAmL,IAG5BS,EAAAlM,UAAA4L,UAAA,SAAAtL,GACA,OAAA6L,UAAArL,OACA,UAAAsL,UAAA,+FAGA,IAASrL,EAAST,GAClB,UAAA8L,UAAA,0FAGIf,EAAwBO,UAAAvM,KAAAiB,IAG5B4L,EAAAlM,UAAAoK,WAAA,WACIiB,EAAwBjB,WAAA/K,OAG5B6M,EAAAG,SAAA,WACA,wDAGAH,EA7CkB,GCHlBI,EAAAC,EAAAC,EAAA,mCAAAP,IAAAK,EAAAC,EAAAC,EAAA,wCAAA/G,IAAA6G,EAAAC,EAAAC,EAAA,uCAAAtN","file":"static/js/2.c0b1e834.chunk.js","sourcesContent":["var resizeObservers = [];\nexport { resizeObservers };","var ResizeObserverBoxOptions;\n\n(function (ResizeObserverBoxOptions) {\n  ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n  ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n  ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\nexport { ResizeObserverBoxOptions };","var msg = 'ResizeObserver loop completed with undelivered notifications.';\n\nvar deliverResizeLoopError = function () {\n  var event;\n\n  if (typeof ErrorEvent === 'function') {\n    event = new ErrorEvent('error', {\n      message: msg\n    });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent('error', false, false);\n    event.message = msg;\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport { deliverResizeLoopError };","export var freeze = function (obj) {\n  return Object.freeze(obj);\n};","var trigger;\nvar callbacks = [];\n\nvar notify = function () {\n  return callbacks.splice(0).forEach(function (cb) {\n    return cb();\n  });\n};\n\nvar queueMicroTask = function (callback) {\n  if (!trigger) {\n    var toggle_1 = 0;\n    var el_1 = document.createTextNode('');\n    var config = {\n      characterData: true\n    };\n    new MutationObserver(function () {\n      return notify();\n    }).observe(el_1, config);\n\n    trigger = function () {\n      el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++);\n    };\n  }\n\n  callbacks.push(callback);\n  trigger();\n};\n\nexport { queueMicroTask };","import { freeze } from './utils/freeze';\n\nvar ResizeObserverSize = function () {\n  function ResizeObserverSize(inlineSize, blockSize) {\n    this.inlineSize = inlineSize;\n    this.blockSize = blockSize;\n    freeze(this);\n  }\n\n  return ResizeObserverSize;\n}();\n\nexport { ResizeObserverSize };","import { freeze } from './utils/freeze';\n\nvar DOMRectReadOnly = function () {\n  function DOMRectReadOnly(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.top = this.y;\n    this.left = this.x;\n    this.bottom = this.top + this.height;\n    this.right = this.left + this.width;\n    return freeze(this);\n  }\n\n  DOMRectReadOnly.prototype.toJSON = function () {\n    var _a = this,\n        x = _a.x,\n        y = _a.y,\n        top = _a.top,\n        right = _a.right,\n        bottom = _a.bottom,\n        left = _a.left,\n        width = _a.width,\n        height = _a.height;\n\n    return {\n      x: x,\n      y: y,\n      top: top,\n      right: right,\n      bottom: bottom,\n      left: left,\n      width: width,\n      height: height\n    };\n  };\n\n  DOMRectReadOnly.fromRect = function (rectangle) {\n    return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n\n  return DOMRectReadOnly;\n}();\n\nexport { DOMRectReadOnly };","var isSVG = function (target) {\n  return target instanceof SVGElement && 'getBBox' in target;\n};\n\nvar isHidden = function (target) {\n  if (isSVG(target)) {\n    var _a = target.getBBox(),\n        width = _a.width,\n        height = _a.height;\n\n    return !width && !height;\n  }\n\n  var _b = target,\n      offsetWidth = _b.offsetWidth,\n      offsetHeight = _b.offsetHeight;\n  return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\n\nvar isElement = function (obj) {\n  var _a, _b;\n\n  if (obj instanceof Element) {\n    return true;\n  }\n\n  var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n  return !!(scope && obj instanceof scope.Element);\n};\n\nvar isReplacedElement = function (target) {\n  switch (target.tagName) {\n    case 'INPUT':\n      if (target.type !== 'image') {\n        break;\n      }\n\n    case 'VIDEO':\n    case 'AUDIO':\n    case 'EMBED':\n    case 'OBJECT':\n    case 'CANVAS':\n    case 'IFRAME':\n    case 'IMG':\n      return true;\n  }\n\n  return false;\n};\n\nexport { isSVG, isHidden, isElement, isReplacedElement };","export var global = typeof window !== 'undefined' ? window : {};","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);\n\nvar parseDimension = function (pixel) {\n  return parseFloat(pixel || '0');\n};\n\nvar size = function (inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n\n  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\n\nvar zeroBoxes = freeze({\n  devicePixelContentBoxSize: size(),\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\n\nvar calculateBoxSizes = function (target, forceRecalculation) {\n  if (forceRecalculation === void 0) {\n    forceRecalculation = false;\n  }\n\n  if (cache.has(target) && !forceRecalculation) {\n    return cache.get(target);\n  }\n\n  if (isHidden(target)) {\n    cache.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === 'border-box';\n  var switchSizes = verticalRegexp.test(cs.writingMode || '');\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = freeze({\n    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache.set(target, boxes);\n  return boxes;\n};\n\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n  var _a = calculateBoxSizes(target, forceRecalculation),\n      borderBoxSize = _a.borderBoxSize,\n      contentBoxSize = _a.contentBoxSize,\n      devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n\n  switch (observedBox) {\n    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n      return devicePixelContentBoxSize;\n\n    case ResizeObserverBoxOptions.BORDER_BOX:\n      return borderBoxSize;\n\n    default:\n      return contentBoxSize;\n  }\n};\n\nexport { calculateBoxSize, calculateBoxSizes };","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\n\nvar ResizeObserverEntry = function () {\n  function ResizeObserverEntry(target) {\n    var boxes = calculateBoxSizes(target);\n    this.target = target;\n    this.contentRect = boxes.contentRect;\n    this.borderBoxSize = freeze([boxes.borderBoxSize]);\n    this.contentBoxSize = freeze([boxes.contentBoxSize]);\n    this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n  }\n\n  return ResizeObserverEntry;\n}();\n\nexport { ResizeObserverEntry };","import { isHidden } from '../utils/element';\n\nvar calculateDepthForNode = function (node) {\n  if (isHidden(node)) {\n    return Infinity;\n  }\n\n  var depth = 0;\n  var parent = node.parentNode;\n\n  while (parent) {\n    depth += 1;\n    parent = parent.parentNode;\n  }\n\n  return depth;\n};\n\nexport { calculateDepthForNode };","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\n\nvar broadcastActiveObservations = function () {\n  var shallowestDepth = Infinity;\n  var callbacks = [];\n  resizeObservers.forEach(function processObserver(ro) {\n    if (ro.activeTargets.length === 0) {\n      return;\n    }\n\n    var entries = [];\n    ro.activeTargets.forEach(function processTarget(ot) {\n      var entry = new ResizeObserverEntry(ot.target);\n      var targetDepth = calculateDepthForNode(ot.target);\n      entries.push(entry);\n      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n\n      if (targetDepth < shallowestDepth) {\n        shallowestDepth = targetDepth;\n      }\n    });\n    callbacks.push(function resizeObserverCallback() {\n      ro.callback.call(ro.observer, entries, ro.observer);\n    });\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n  });\n\n  for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n    var callback = callbacks_1[_i];\n    callback();\n  }\n\n  return shallowestDepth;\n};\n\nexport { broadcastActiveObservations };","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\n\nvar gatherActiveObservationsAtDepth = function (depth) {\n  resizeObservers.forEach(function processObserver(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n    ro.skippedTargets.splice(0, ro.skippedTargets.length);\n    ro.observationTargets.forEach(function processTarget(ot) {\n      if (ot.isActive()) {\n        if (calculateDepthForNode(ot.target) > depth) {\n          ro.activeTargets.push(ot);\n        } else {\n          ro.skippedTargets.push(ot);\n        }\n      }\n    });\n  });\n};\n\nexport { gatherActiveObservationsAtDepth };","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\n\nvar process = function () {\n  var depth = 0;\n  gatherActiveObservationsAtDepth(depth);\n\n  while (hasActiveObservations()) {\n    depth = broadcastActiveObservations();\n    gatherActiveObservationsAtDepth(depth);\n  }\n\n  if (hasSkippedObservations()) {\n    deliverResizeLoopError();\n  }\n\n  return depth > 0;\n};\n\nexport { process };","import { resizeObservers } from '../utils/resizeObservers';\n\nvar hasActiveObservations = function () {\n  return resizeObservers.some(function (ro) {\n    return ro.activeTargets.length > 0;\n  });\n};\n\nexport { hasActiveObservations };","import { resizeObservers } from '../utils/resizeObservers';\n\nvar hasSkippedObservations = function () {\n  return resizeObservers.some(function (ro) {\n    return ro.skippedTargets.length > 0;\n  });\n};\n\nexport { hasSkippedObservations };","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\n\nvar isWatching = function () {\n  return !!watching;\n};\n\nvar CATCH_PERIOD = 250;\nvar observerConfig = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nvar events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];\n\nvar time = function (timeout) {\n  if (timeout === void 0) {\n    timeout = 0;\n  }\n\n  return Date.now() + timeout;\n};\n\nvar scheduled = false;\n\nvar Scheduler = function () {\n  function Scheduler() {\n    var _this = this;\n\n    this.stopped = true;\n\n    this.listener = function () {\n      return _this.schedule();\n    };\n  }\n\n  Scheduler.prototype.run = function (timeout) {\n    var _this = this;\n\n    if (timeout === void 0) {\n      timeout = CATCH_PERIOD;\n    }\n\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    var until = time(timeout);\n    queueResizeObserver(function () {\n      var elementsHaveResized = false;\n\n      try {\n        elementsHaveResized = process();\n      } finally {\n        scheduled = false;\n        timeout = until - time();\n\n        if (!isWatching()) {\n          return;\n        }\n\n        if (elementsHaveResized) {\n          _this.run(1000);\n        } else if (timeout > 0) {\n          _this.run(timeout);\n        } else {\n          _this.start();\n        }\n      }\n    });\n  };\n\n  Scheduler.prototype.schedule = function () {\n    this.stop();\n    this.run();\n  };\n\n  Scheduler.prototype.observe = function () {\n    var _this = this;\n\n    var cb = function () {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n\n    document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n  };\n\n  Scheduler.prototype.start = function () {\n    var _this = this;\n\n    if (this.stopped) {\n      this.stopped = false;\n      this.observer = new MutationObserver(this.listener);\n      this.observe();\n      events.forEach(function (name) {\n        return global.addEventListener(name, _this.listener, true);\n      });\n    }\n  };\n\n  Scheduler.prototype.stop = function () {\n    var _this = this;\n\n    if (!this.stopped) {\n      this.observer && this.observer.disconnect();\n      events.forEach(function (name) {\n        return global.removeEventListener(name, _this.listener, true);\n      });\n      this.stopped = true;\n    }\n  };\n\n  return Scheduler;\n}();\n\nvar scheduler = new Scheduler();\n\nvar updateCount = function (n) {\n  !watching && n > 0 && scheduler.start();\n  watching += n;\n  !watching && scheduler.stop();\n};\n\nexport { scheduler, updateCount };","import { queueMicroTask } from './queueMicroTask';\n\nvar queueResizeObserver = function (cb) {\n  queueMicroTask(function ResizeObserver() {\n    requestAnimationFrame(cb);\n  });\n};\n\nexport { queueResizeObserver };","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\n\nvar skipNotifyOnElement = function (target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\n\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox, true);\n\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return ResizeObservation;\n}();\n\nexport { ResizeObservation };","var ResizeObserverDetail = function () {\n  function ResizeObserverDetail(resizeObserver, callback) {\n    this.activeTargets = [];\n    this.skippedTargets = [];\n    this.observationTargets = [];\n    this.observer = resizeObserver;\n    this.callback = callback;\n  }\n\n  return ResizeObserverDetail;\n}();\n\nexport { ResizeObserverDetail };","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\n\nvar getObservationIndex = function (observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1) {\n    if (observationTargets[i].target === target) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar ResizeObserverController = function () {\n  function ResizeObserverController() {}\n\n  ResizeObserverController.connect = function (resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    observerMap.set(resizeObserver, detail);\n  };\n\n  ResizeObserverController.observe = function (resizeObserver, target, options) {\n    var detail = observerMap.get(resizeObserver);\n    var firstObservation = detail.observationTargets.length === 0;\n\n    if (getObservationIndex(detail.observationTargets, target) < 0) {\n      firstObservation && resizeObservers.push(detail);\n      detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n      updateCount(1);\n      scheduler.schedule();\n    }\n  };\n\n  ResizeObserverController.unobserve = function (resizeObserver, target) {\n    var detail = observerMap.get(resizeObserver);\n    var index = getObservationIndex(detail.observationTargets, target);\n    var lastObservation = detail.observationTargets.length === 1;\n\n    if (index >= 0) {\n      lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n      detail.observationTargets.splice(index, 1);\n      updateCount(-1);\n    }\n  };\n\n  ResizeObserverController.disconnect = function (resizeObserver) {\n    var _this = this;\n\n    var detail = observerMap.get(resizeObserver);\n    detail.observationTargets.slice().forEach(function (ot) {\n      return _this.unobserve(resizeObserver, ot.target);\n    });\n    detail.activeTargets.splice(0, detail.activeTargets.length);\n  };\n\n  return ResizeObserverController;\n}();\n\nexport { ResizeObserverController };","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\n\nvar ResizeObserver = function () {\n  function ResizeObserver(callback) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n    }\n\n    ResizeObserverController.connect(this, callback);\n  }\n\n  ResizeObserver.prototype.observe = function (target, options) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (!isElement(target)) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.observe(this, target, options);\n  };\n\n  ResizeObserver.prototype.unobserve = function (target) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (!isElement(target)) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.unobserve(this, target);\n  };\n\n  ResizeObserver.prototype.disconnect = function () {\n    ResizeObserverController.disconnect(this);\n  };\n\n  ResizeObserver.toString = function () {\n    return 'function ResizeObserver () { [polyfill code] }';\n  };\n\n  return ResizeObserver;\n}();\n\nexport { ResizeObserver };","export { ResizeObserver } from '../ResizeObserver';\nexport { ResizeObserverEntry } from '../ResizeObserverEntry';\nexport { ResizeObserverSize } from '../ResizeObserverSize';"],"sourceRoot":""}